Things to complete for 0.1.0:
  * Figure out what is causing all of these funky problems with random Windows
    applications. If it turns out to be Qt (which is my current guess), we should 
    try to submit a patch to Trolltech (Ticket #101).
  * When creating the Tor service on Windows, we either should be creating a
    separate user to run the service as (instead of running it as Local
    System), or we should write a patch for Tor to do it (Ticket #16).
  * Our GeoIP cache should recognize IP addresses on the same subnet.
    (Ticket #154)
  * There is a Flyspray ticket on Tor's bugtracker about not being able to
    config changes when an alternate torrc is specified. Need to be verified
    and/or fixed. (http://bugs.noreply.org/flyspray/?do=details&id=319)
  * On OS X, there should be menu options for starting and stopping Tor via
    the dock icon. (Ticket #135)
  * Roger is going to add some additional events that Vidalia should respond
    to, such as "hey, you're a server now!"
  * Actually do something useful with the AUTHENTICATE command, rather than
    simply sending an empty one.
  * Our queue of GeoIP requests should have two timers: one long one starts
    when the first item is inserted into the queue and one shorter one that is
    reset every time an item is added to the queue. We would flush the queue
    whenever the first one expires. (Currently we just do the latter)
  * GeoIP requests should be encrypted so the exit node does not know what is
    being requested and cannot muck with the requests or responses.
  * We should do a "getconf socksport" before setting a connection up through
    Tor, instead of just picking 9050 and hoping the user didn't change it.


Features planned for 0.1.x:
  * Scheduled rate-limiting, so the user can adjust their bandwidth
    limits depending on what time of day it is.
  * An interface for letting the user send arbitrary signals to Tor. The phase
    1 GUI competition judges didn't like the idea, but our users and Roger
    seem to like the idea. Oh what is a Vidalia developer to do?
  * Provide an interface for configuring all torrc options. This might look
    something like a table, populated via "getinfo config/names". (Ticket #76)
  * A web-based interface for viewing the status of Tor from the user's
    browser and possibly configuring Tor, too. (Ticket #42)


Miscellaneous Tasks:
  * Create Vidalia packages for Red Hat and Debian.
  * Package Torbutton or FoxTor with our bundles.
  * Improve window transparency support. In particular, figure out how to do the
    following correctly on X11 (from the Qt docs):
      "This feature is available on Mac OS X, X11 platforms that support the Composite 
      extension, and Windows 2000 and later.

      Note that under X11 you need to have a composite manager running, and the X11 
      specific _NET_WM_WINDOW_OPACITY atom needs to be supported by the window manager 
      you are using."
  
  * Think about smarter ways to handle the GeoIP lookups. Our servers get
    quite a bit of traffic from GeoIP lookups and it would be nice if we could
    cut this back a bit.
  * Get some help from the Sasha and the CMU folks with doing a real user study and 
    getting help making our window layouts and text better.
  * Find something to replace Trac. Perhaps Bugzilla+Mediawiki or MoinMoin.
    Alternatively, it seems Trac 0.10 supports things like spam filtering and
    user accounts via plugins. Perhaps we should look into these.
  * I'm told our website looks terrible in IE. We should try to fix this.


Notes from Roger:
  * I mentioned today that it would be smart if Vidalia recognized when
    Tor refuses to write its config file because of permissions, and did
    something smarter -- like handling the error and remembering the intended
    changes itself, or like rephrasing the error to give some hints about
    what's going on.
  
  * For the configure server window, I'm using 1024x768, and it fills my
    screen vertically. Will lower resolutions have problems here?
 
